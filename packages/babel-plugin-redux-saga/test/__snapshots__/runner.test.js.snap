// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel v6 attach source to declaration 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"declaration/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration/source.js\\",
    lineNumber: 1
  }
});
function* test2() {
  yield 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 attach source to export declaration 1`] = `
"export function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"declaration-es6-modules/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-es6-modules/source.js\\",
    lineNumber: 1
  }
});
export default function* test2() {
  yield 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-es6-modules/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 attach source to export declaration when processed with regenerator 1`] = `
"\\"use strict\\";

var _marked = /*#__PURE__*/regeneratorRuntime.mark(test1),
    _marked2 = /*#__PURE__*/regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"declaration-regenerator/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-regenerator/source.js\\",
    lineNumber: 1
  }
});
function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-regenerator/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should be compatible with env preset regenerator 1`] = `
"\\"use strict\\";

var _marked = /*#__PURE__*/regeneratorRuntime.mark(test1),
    _marked2 = /*#__PURE__*/regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"preset-env/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"preset-env/source.js\\",
    lineNumber: 1
  }
});
function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"preset-env/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should be compatible with es2015 preset regenerator 1`] = `
"\\"use strict\\";

var _marked = /*#__PURE__*/regeneratorRuntime.mark(test1),
    _marked2 = /*#__PURE__*/regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"regenerator/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"regenerator/source.js\\",
    lineNumber: 1
  }
});
function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"regenerator/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should build path relative to basePath option 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"source.js\\",
    lineNumber: 1
  }
});
function* test2() {
  yield 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should configure Symbol usage 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), \\"@@redux-saga/LOCATION\\", {
      value: {
        fileName: \\"use-symbol/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, \\"@@redux-saga/LOCATION\\", {
  value: {
    fileName: \\"use-symbol/source.js\\",
    lineNumber: 1
  }
});
function* test2() {
  yield 2;
}
Object.defineProperty(test2, \\"@@redux-saga/LOCATION\\", {
  value: {
    fileName: \\"use-symbol/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should handle expressions in object properties 1`] = `
"function* withEffectObjectProps() {
  yield function reduxSagaSource() {
    return Object.defineProperty(race({
      timeout: delay(3000),
      cannelled: take('CANCELLED')
    }), Symbol.for('@@redux-saga/LOCATION'), {
      value: {
        fileName: 'effect-object-props/source.js',
        lineNumber: 2,
        code: 'race({\\\\n    timeout: delay(3000),\\\\n    cannelled: take(\\\\'CANCELLED\\\\'),\\\\n  })'
      }
    });
  }();
}
Object.defineProperty(withEffectObjectProps, Symbol.for('@@redux-saga/LOCATION'), {
  value: {
    fileName: 'effect-object-props/source.js',
    lineNumber: 1
  }
});"
`;

exports[`babel v6 should handle nested structures 1`] = `
"function* hasNested() {
  yield function reduxSagaSource() {
    return Object.defineProperty(call(function* test2() {
      yield function reduxSagaSource() {
        return Object.defineProperty(call(foo), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
          value: {
            fileName: \\"effect-nested/source.js\\",
            lineNumber: 3,
            code: \\"call(foo)\\"
          }
        });
      }();
    }), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-nested/source.js\\",
        lineNumber: 2,
        code: \\"call(function* test2() {\\\\n    yield call(foo)\\\\n  })\\"
      }
    });
  }();
}
Object.defineProperty(hasNested, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-nested/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v6 should handle passed sourcemaps 1`] = `
"const sum = (a, b) => a + b;
function* tstest1() {
  const result = yield function reduxSagaSource() {
    return Object.defineProperty(sum(1, 2), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"typescript/source.js (source.ts)\\",
        lineNumber: 5,
        code: \\"sum(1, 2)\\"
      }
    });
  }();
  return result;
}
Object.defineProperty(tstest1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"typescript/source.js (source.ts)\\",
    lineNumber: 4
  }
});
const z = 1; // that's hack. since there's a problem with babel https://github.com/babel/babel/issues/7002
//# sourceMappingURL=source.js.map"
`;

exports[`babel v6 should handle simplest expression 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo.bar(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-expression/source.js\\",
        lineNumber: 2,
        code: \\"foo.bar(1, 2, 3)\\"
      }
    });
  }() || {};
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-expression/source.js\\",
    lineNumber: 1
  }
});
function* test2() {
  yield 1 + 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-expression/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 should wrap method call 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo.bar(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-method/source.js\\",
        lineNumber: 2,
        code: \\"foo.bar(1, 2, 3)\\"
      }
    });
  }();
}
Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-method/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v6 should wrap yielded call expression (no name check) 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-basic/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-basic/source.js\\",
    lineNumber: 1
  }
});
function* test2() {
  yield 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-basic/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v6 shouldn't wrap delegate (for now) 1`] = `
"function* test1() {
  yield* function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-delegate/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}
Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-delegate/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v7 attach source to declaration 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"declaration/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration/source.js\\",
    lineNumber: 1
  }
});

function* test2() {
  yield 2;
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 attach source to export declaration 1`] = `
"export function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"declaration-es6-modules/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}
Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-es6-modules/source.js\\",
    lineNumber: 1
  }
});
export default function* test2() {
  yield 2;
}
Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-es6-modules/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 attach source to export declaration when processed with regenerator 1`] = `
"var _marked =
/*#__PURE__*/
regeneratorRuntime.mark(test1),
    _marked2 =
/*#__PURE__*/
regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"declaration-regenerator/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-regenerator/source.js\\",
    lineNumber: 1
  }
});

function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"declaration-regenerator/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should be compatible with env preset regenerator 1`] = `
"var _marked =
/*#__PURE__*/
regeneratorRuntime.mark(test1),
    _marked2 =
/*#__PURE__*/
regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"preset-env/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"preset-env/source.js\\",
    lineNumber: 1
  }
});

function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"preset-env/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should be compatible with es2015 preset regenerator 1`] = `
"var _marked =
/*#__PURE__*/
regeneratorRuntime.mark(test1),
    _marked2 =
/*#__PURE__*/
regeneratorRuntime.mark(test2);

function test1() {
  return regeneratorRuntime.wrap(function test1$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return function reduxSagaSource() {
            return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
              value: {
                fileName: \\"regenerator/source.js\\",
                lineNumber: 2,
                code: \\"foo(1, 2, 3)\\"
              }
            });
          }();

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, _marked, this);
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"regenerator/source.js\\",
    lineNumber: 1
  }
});

function test2() {
  return regeneratorRuntime.wrap(function test2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return 2;

        case 2:
        case \\"end\\":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"regenerator/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should build path relative to basePath option 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"source.js\\",
    lineNumber: 1
  }
});

function* test2() {
  yield 2;
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should configure Symbol usage 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), \\"@@redux-saga/LOCATION\\", {
      value: {
        fileName: \\"use-symbol/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, \\"@@redux-saga/LOCATION\\", {
  value: {
    fileName: \\"use-symbol/source.js\\",
    lineNumber: 1
  }
});

function* test2() {
  yield 2;
}

Object.defineProperty(test2, \\"@@redux-saga/LOCATION\\", {
  value: {
    fileName: \\"use-symbol/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should handle expressions in object properties 1`] = `
"function* withEffectObjectProps() {
  yield function reduxSagaSource() {
    return Object.defineProperty(race({
      timeout: delay(3000),
      cannelled: take('CANCELLED')
    }), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-object-props/source.js\\",
        lineNumber: 2,
        code: \\"race({\\\\n    timeout: delay(3000),\\\\n    cannelled: take('CANCELLED'),\\\\n  })\\"
      }
    });
  }();
}

Object.defineProperty(withEffectObjectProps, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-object-props/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v7 should handle nested structures 1`] = `
"function* hasNested() {
  yield function reduxSagaSource() {
    return Object.defineProperty(call(function* test2() {
      yield function reduxSagaSource() {
        return Object.defineProperty(call(foo), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
          value: {
            fileName: \\"effect-nested/source.js\\",
            lineNumber: 3,
            code: \\"call(foo)\\"
          }
        });
      }();
    }), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-nested/source.js\\",
        lineNumber: 2,
        code: \\"call(function* test2() {\\\\n    yield call(foo)\\\\n  })\\"
      }
    });
  }();
}

Object.defineProperty(hasNested, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-nested/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v7 should handle passed sourcemaps 1`] = `
"const sum = (a, b) => a + b;

function* tstest1() {
  const result = yield function reduxSagaSource() {
    return Object.defineProperty(sum(1, 2), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"typescript/source.js (source.ts)\\",
        lineNumber: 5,
        code: \\"sum(1, 2)\\"
      }
    });
  }();
  return result;
}

Object.defineProperty(tstest1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"typescript/source.js (source.ts)\\",
    lineNumber: 4
  }
});
const z = 1; // that's hack. since there's a problem with babel https://github.com/babel/babel/issues/7002
//# sourceMappingURL=source.js.map"
`;

exports[`babel v7 should handle simplest expression 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo.bar(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-expression/source.js\\",
        lineNumber: 2,
        code: \\"foo.bar(1, 2, 3)\\"
      }
    });
  }() || {};
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-expression/source.js\\",
    lineNumber: 1
  }
});

function* test2() {
  yield 1 + 2;
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-expression/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 should wrap method call 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo.bar(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-method/source.js\\",
        lineNumber: 2,
        code: \\"foo.bar(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-method/source.js\\",
    lineNumber: 1
  }
});"
`;

exports[`babel v7 should wrap yielded call expression (no name check) 1`] = `
"function* test1() {
  yield function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-basic/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-basic/source.js\\",
    lineNumber: 1
  }
});

function* test2() {
  yield 2;
}

Object.defineProperty(test2, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-basic/source.js\\",
    lineNumber: 5
  }
});"
`;

exports[`babel v7 shouldn't wrap delegate (for now) 1`] = `
"function* test1() {
  yield* function reduxSagaSource() {
    return Object.defineProperty(foo(1, 2, 3), Symbol.for(\\"@@redux-saga/LOCATION\\"), {
      value: {
        fileName: \\"effect-delegate/source.js\\",
        lineNumber: 2,
        code: \\"foo(1, 2, 3)\\"
      }
    });
  }();
}

Object.defineProperty(test1, Symbol.for(\\"@@redux-saga/LOCATION\\"), {
  value: {
    fileName: \\"effect-delegate/source.js\\",
    lineNumber: 1
  }
});"
`;
